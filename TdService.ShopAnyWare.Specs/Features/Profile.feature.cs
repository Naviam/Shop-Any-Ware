// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18010
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TdService.ShopAnyWare.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Profile")]
    [NUnit.Framework.CategoryAttribute("profile")]
    public partial class ProfileFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Profile.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Profile", "In order to control service behavior\r\nAs a shopper\r\nI want to be able to change m" +
                    "y profile settings", ProgrammingLanguage.CSharp, new string[] {
                        "profile"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("View my profile")]
        [NUnit.Framework.CategoryAttribute("viewprofile")]
        public virtual void ViewMyProfile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("View my profile", new string[] {
                        "viewprofile"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("there is \'v.hatalski@gmail.com\' account with \'ruinruin\' password in role \'Shopper" +
                    "\' with fullname \'Vitali\' and \'Hatalski\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("I am authenticated as \'v.hatalski@gmail.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.When("I go to my profile page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "First Name",
                        "Last Name",
                        "Notify On Order Status Changed",
                        "Notify On Package Status Changed",
                        "Message Type"});
            table1.AddRow(new string[] {
                        "v.hatalski@gmail.com",
                        "Vitali",
                        "Hatalski",
                        "False",
                        "False",
                        "Success"});
#line 12
 testRunner.Then("the profile view model should be as follows", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update my profile")]
        [NUnit.Framework.CategoryAttribute("updateprofile")]
        public virtual void UpdateMyProfile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update my profile", new string[] {
                        "updateprofile"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("there is \'v.hatalski@gmail.com\' account with \'ruinruin\' password in role \'Shopper" +
                    "\' with fullname \'Vitali\' and \'Hatalski\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And("I am authenticated as \'v.hatalski@gmail.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "First Name",
                        "Last Name",
                        "Notify On Order Status Changed",
                        "Notify On Package Status Changed"});
            table2.AddRow(new string[] {
                        "Alex",
                        "Ivanov",
                        "True",
                        "True"});
#line 20
 testRunner.When("I fill the profile form with following data", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "First Name",
                        "Last Name",
                        "Notify On Order Status Changed",
                        "Notify On Package Status Changed",
                        "Message Type"});
            table3.AddRow(new string[] {
                        "v.hatalski@gmail.com",
                        "Alex",
                        "Ivanov",
                        "True",
                        "True",
                        "Success"});
#line 23
 testRunner.Then("the profile view model should be as follows", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate required fields when updating my profile")]
        [NUnit.Framework.CategoryAttribute("updateprofile")]
        public virtual void ValidateRequiredFieldsWhenUpdatingMyProfile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate required fields when updating my profile", new string[] {
                        "updateprofile"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("there is \'v.hatalski@gmail.com\' account with \'ruinruin\' password in role \'Shopper" +
                    "\' with fullname \'Vitali\' and \'Hatalski\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
 testRunner.And("I am authenticated as \'v.hatalski@gmail.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "First Name",
                        "Last Name",
                        "Notify On Order Status Changed",
                        "Notify On Package Status Changed"});
            table4.AddRow(new string[] {
                        "",
                        "",
                        "True",
                        "False"});
#line 31
 testRunner.When("I fill the profile form with following data", ((string)(null)), table4, "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "First Name",
                        "Last Name",
                        "Notify On Order Status Changed",
                        "Notify On Package Status Changed",
                        "Message Type"});
            table5.AddRow(new string[] {
                        "v.hatalski@gmail.com",
                        "",
                        "",
                        "True",
                        "False",
                        "Warning"});
#line 34
 testRunner.Then("the profile view model should be as follows", ((string)(null)), table5, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Error Code"});
            table6.AddRow(new string[] {
                        "FirstName",
                        "ProfileFirstNameRequired"});
            table6.AddRow(new string[] {
                        "LastName",
                        "ProfileLastNameRequired"});
#line 37
 testRunner.And("the profile view model should have following errors", ((string)(null)), table6, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate max fields length when updating my profile")]
        [NUnit.Framework.CategoryAttribute("updateprofile")]
        public virtual void ValidateMaxFieldsLengthWhenUpdatingMyProfile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate max fields length when updating my profile", new string[] {
                        "updateprofile"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
 testRunner.Given("there is \'v.hatalski@gmail.com\' account with \'ruinruin\' password in role \'Shopper" +
                    "\' with fullname \'Vitali\' and \'Hatalski\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.And("I am authenticated as \'v.hatalski@gmail.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "First Name",
                        "Last Name",
                        "Notify On Order Status Changed",
                        "Notify On Package Status Changed"});
            table7.AddRow(new string[] {
                        "First name must not exceed 21 chars length",
                        "Last name must not exceed 21 chars length",
                        "False",
                        "True"});
#line 46
 testRunner.When("I fill the profile form with following data", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Email",
                        "First Name",
                        "Last Name",
                        "Notify On Order Status Changed",
                        "Notify On Package Status Changed",
                        "Message Type"});
            table8.AddRow(new string[] {
                        "v.hatalski@gmail.com",
                        "First name must not exceed 21 chars length",
                        "Last name must not exceed 21 chars length",
                        "False",
                        "True",
                        "Warning"});
#line 49
 testRunner.Then("the profile view model should be as follows", ((string)(null)), table8, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Error Code"});
            table9.AddRow(new string[] {
                        "FirstName",
                        "ProfileFirstNameMaxLength"});
            table9.AddRow(new string[] {
                        "LastName",
                        "ProfileLastNameMaxLength"});
#line 52
 testRunner.And("the profile view model should have following errors", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
