// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TdService.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Shopper Order Items")]
    [NUnit.Framework.CategoryAttribute("shopper")]
    [NUnit.Framework.CategoryAttribute("orders")]
    [NUnit.Framework.CategoryAttribute("items")]
    public partial class ShopperOrderItemsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ShopperOrderItems.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Shopper Order Items", "In order to consolidate and send packages\r\nAs a shopper\r\nI want to be able to mov" +
                    "e items to packages and change the customs declaration", ProgrammingLanguage.CSharp, new string[] {
                        "shopper",
                        "orders",
                        "items"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Move item to package")]
        [NUnit.Framework.CategoryAttribute("moveitemtopackage")]
        public virtual void MoveItemToPackage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Move item to package", new string[] {
                        "moveitemtopackage"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("there is \'v.hatalski@gmail.com\' account with \'ruinruin\' password in role \'Shopper" +
                    "\' with fullname \'Vitali\' and \'Hatalski\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FirstName",
                        "LastName",
                        "AddressName",
                        "AddressLine1",
                        "AddressLine2",
                        "City",
                        "Country",
                        "State",
                        "Region",
                        "ZipCode",
                        "Phone"});
            table1.AddRow(new string[] {
                        "1",
                        "Vitali",
                        "Hatalski",
                        "Minsk - Novovilenskaya",
                        "Novovilenskaya street",
                        "10, 41",
                        "Minsk",
                        "Belarus",
                        "",
                        "",
                        "220053",
                        "+375295067630"});
            table1.AddRow(new string[] {
                        "2",
                        "Vitali",
                        "Hatalski",
                        "Minsk - Nekrasova",
                        "Nekrasova street",
                        "8, 14",
                        "Minsk",
                        "Belarus",
                        "",
                        "",
                        "220040",
                        "+375295067630"});
            table1.AddRow(new string[] {
                        "3",
                        "Patric",
                        "Gutie",
                        "France - Paris",
                        "Elisei",
                        "14/3, 45",
                        "Paris",
                        "France",
                        "",
                        "",
                        "12040",
                        "+455295067630"});
#line 10
 testRunner.And("I have the following delivery addresses", ((string)(null)), table1, "And ");
#line 15
 testRunner.And("I am authenticated as \'v.hatalski@gmail.com\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Name",
                        "Status",
                        "Delivery Address",
                        "Delivery Method"});
            table2.AddRow(new string[] {
                        "1",
                        "My first package",
                        "New",
                        "1",
                        "Express"});
#line 16
 testRunner.And("there are following packages in database", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Retailer",
                        "Order Number",
                        "Tracking Number",
                        "Status"});
            table3.AddRow(new string[] {
                        "1",
                        "amazon.com",
                        "1234567890",
                        "1234567890",
                        "New"});
            table3.AddRow(new string[] {
                        "2",
                        "macys.com",
                        "1234567891",
                        "1234567891",
                        "Received"});
#line 19
 testRunner.And("there are following orders in database", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Name",
                        "Quantity",
                        "Price",
                        "Weight"});
            table4.AddRow(new string[] {
                        "1",
                        "IPAD3",
                        "1",
                        "780.40",
                        "600"});
            table4.AddRow(new string[] {
                        "2",
                        "Kindle",
                        "5",
                        "130.95",
                        "200"});
#line 23
    testRunner.And("there are following items for order \'1\' in database", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
