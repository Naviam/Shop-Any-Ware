<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressAddressLine1MaxLength" xml:space="preserve">
    <value>The 1st line of an Address must be a string with a maximum length of 256.</value>
  </data>
  <data name="AddressAddressLine1Required" xml:space="preserve">
    <value>The 1st line of an Address is required.</value>
  </data>
  <data name="AddressAddressLine2MaxLength" xml:space="preserve">
    <value>The 2nd line of an Address must be a string with a maximum length of 256.</value>
  </data>
  <data name="AddressCityMaxLength" xml:space="preserve">
    <value>An address city must be a string with a maximum length of 64.</value>
  </data>
  <data name="AddressCityRequired" xml:space="preserve">
    <value>An address must have a city.</value>
  </data>
  <data name="AddressCountryMaxLength" xml:space="preserve">
    <value>An address country must be a string with a maximum length of 64.</value>
  </data>
  <data name="AddressCountryRequired" xml:space="preserve">
    <value>An address must have a country.</value>
  </data>
  <data name="AddressPhoneMaxLength" xml:space="preserve">
    <value>An address phone number must be a string with a maximum length of 21.</value>
  </data>
  <data name="AddressRegionMaxLength" xml:space="preserve">
    <value>An address region must be a string with a maximum length of 64.</value>
  </data>
  <data name="AddressStateMaxLength" xml:space="preserve">
    <value>An address state must be a string with a maximum length of 64.</value>
  </data>
  <data name="AddressZipCodeMaxLength" xml:space="preserve">
    <value>An address zip code must be a string with a maximum length of 10.</value>
  </data>
  <data name="AddressZipCodeRequired" xml:space="preserve">
    <value>An address must have a zip code.</value>
  </data>
  <data name="CourierNameMaxLength" xml:space="preserve">
    <value>Courier name must be a string with a maximum length of 64.</value>
  </data>
  <data name="CourierNameRequired" xml:space="preserve">
    <value>A courier must have a name.</value>
  </data>
  <data name="DeliveryAddressAddressNameMaxLength" xml:space="preserve">
    <value>Address name must be a string with a maximum length of 40.</value>
  </data>
  <data name="DeliveryAddressAddressNameRequired" xml:space="preserve">
    <value>A delivery address must have a name.</value>
  </data>
  <data name="DeliveryAddressFirstNameMaxLength" xml:space="preserve">
    <value>First name must be a string with a maximum length of 21.</value>
  </data>
  <data name="DeliveryAddressFirstNameRequired" xml:space="preserve">
    <value>A delivery address must contain your first name.</value>
  </data>
  <data name="DeliveryAddressLastNameMaxLength" xml:space="preserve">
    <value>Last name must be a string with a maximum length of 21.</value>
  </data>
  <data name="DeliveryAddressLastNameRequired" xml:space="preserve">
    <value>A delivery address must contain your last name.</value>
  </data>
  <data name="ItemNameMaxLength" xml:space="preserve">
    <value>An item name must be a string with a maximum length of 64.</value>
  </data>
  <data name="ItemNameRequired" xml:space="preserve">
    <value>An item must have a name.</value>
  </data>
  <data name="ItemPriceRequired" xml:space="preserve">
    <value>An item must have a price.</value>
  </data>
  <data name="ItemQuantityRequired" xml:space="preserve">
    <value>An item must have a quantity.</value>
  </data>
  <data name="ItemWeightRequired" xml:space="preserve">
    <value>An item must have a weight.</value>
  </data>
  <data name="OrderCannotBeAddedByYou" xml:space="preserve">
    <value>Заказ не может быть добавлен Вами. Только пользователь в роли "Shopper" может делать это.</value>
  </data>
  <data name="OrderCannotBeRemoved" xml:space="preserve">
    <value>В текущем состоянии заказ не может быть удален.</value>
  </data>
  <data name="OrderCannotBeUpdated" xml:space="preserve">
    <value>В текущем состоянии заказ не может быть отредактирован.</value>
  </data>
  <data name="OrderCreatedDateRequired" xml:space="preserve">
    <value>У заказа должна быть указана дата создания.</value>
  </data>
  <data name="OrderNotFoundForUser" xml:space="preserve">
    <value>Заказ не был найден.</value>
  </data>
  <data name="OrderOrderNumberMaxLength" xml:space="preserve">
    <value>Order number must be a string with a maximum length of 64.</value>
  </data>
  <data name="OrderReceivedDateRequired" xml:space="preserve">
    <value>У заказа в состоянии Получен должна быть указана дата получения.</value>
  </data>
  <data name="OrderRetailerRequired" xml:space="preserve">
    <value>У заказа должен быть указан магазин.</value>
  </data>
  <data name="OrderStatusExtendedMaxLength" xml:space="preserve">
    <value>Order extended status must be a string with a maximum length of 64.</value>
  </data>
  <data name="OrderStatusRequired" xml:space="preserve">
    <value>У заказа должен быть указан статус.</value>
  </data>
  <data name="OrderTrackingNumberMaxLength" xml:space="preserve">
    <value>Tracking number must be a string with a maximum length of 64.</value>
  </data>
  <data name="OrderWeightRequired" xml:space="preserve">
    <value>Order in Received status must have a weight.</value>
  </data>
  <data name="PackageCannotBeAddedByYou" xml:space="preserve">
    <value>Посылка не может быть добавлена Вами. Только пользователь в роли "Shopper" может делать это.</value>
  </data>
  <data name="PackageNameMaxLength" xml:space="preserve">
    <value>Название посылки не должно превышать 21 символов длинны.</value>
  </data>
  <data name="PackageNameRequired" xml:space="preserve">
    <value>A package must have a name.</value>
  </data>
  <data name="ProfileFirstNameMaxLength" xml:space="preserve">
    <value>Ваше имя не должно быть длиннее 21 символа.</value>
  </data>
  <data name="ProfileFirstNameRequired" xml:space="preserve">
    <value>Ваша фамилия обязательна для ввода.</value>
  </data>
  <data name="ProfileLastNameMaxLength" xml:space="preserve">
    <value>Ваша фамилия не должна длиннее 21 символа.</value>
  </data>
  <data name="ProfileLastNameRequired" xml:space="preserve">
    <value>Ваше имя обязательно для ввода.</value>
  </data>
  <data name="ProfileNotFound" xml:space="preserve">
    <value>Can't retrieve user profile. Profile has not been found.</value>
  </data>
  <data name="RetailerCategoryMaxLength" xml:space="preserve">
    <value>Retailer category must be a string with a maximum length of 64.</value>
  </data>
  <data name="RetailerCategoryRequired" xml:space="preserve">
    <value>A retailer must have a category.</value>
  </data>
  <data name="RetailerDescriptionMaxLength" xml:space="preserve">
    <value>Retailer description must be a string with a maximum length of 1024.</value>
  </data>
  <data name="RetailerNameMaxLength" xml:space="preserve">
    <value>Retailer name must be a string with a maximum length of 64.</value>
  </data>
  <data name="RetailerNameRequired" xml:space="preserve">
    <value>A retailer must have a name.</value>
  </data>
  <data name="RetailerUrlMaxLength" xml:space="preserve">
    <value>Retailer url must be a string with a maximum length of 256.</value>
  </data>
  <data name="RetailerUrlRequired" xml:space="preserve">
    <value>A retailer must have a url.</value>
  </data>
  <data name="RoleDescriptionMaxLength" xml:space="preserve">
    <value>Description must be a string with a maximum length of 64.</value>
  </data>
  <data name="RoleNameMaxLength" xml:space="preserve">
    <value>Name must be a string with a maximum length of 64.</value>
  </data>
  <data name="RoleNameRequired" xml:space="preserve">
    <value>Роль должна иметь имя.</value>
  </data>
  <data name="UserEmailExists" xml:space="preserve">
    <value>Пользователь с таким E-mail адресом уже существует.</value>
  </data>
  <data name="UserEmailInvalid" xml:space="preserve">
    <value>Формат E-mail неверен.</value>
  </data>
  <data name="UserEmailMaxLength" xml:space="preserve">
    <value>E-mail не должен превышать 256 символов.</value>
  </data>
  <data name="UserEmailRequired" xml:space="preserve">
    <value>E-mail обязателен для ввода.</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>Пользователь не был найден.</value>
  </data>
  <data name="UserNotValid" xml:space="preserve">
    <value>E-mail или пароль неверен.</value>
  </data>
  <data name="UserPasswordConfirmNotEqual" xml:space="preserve">
    <value>Пожалуйста проверьте что пароли совпадают.</value>
  </data>
  <data name="UserPasswordConfirmRequired" xml:space="preserve">
    <value>Введите пароль заново, чтобы избежать ошибок.</value>
  </data>
  <data name="UserPasswordMaxLength" xml:space="preserve">
    <value>Пароль не должен превышать 21 символа.</value>
  </data>
  <data name="UserPasswordMinLength" xml:space="preserve">
    <value>Пароль не должен быть менее 7 символов.</value>
  </data>
  <data name="UserPasswordRequired" xml:space="preserve">
    <value>Пароль обязателен для ввода.</value>
  </data>
</root>