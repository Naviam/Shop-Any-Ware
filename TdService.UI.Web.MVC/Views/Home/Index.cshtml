@using System.Web.Optimization
@using TdService.Resources.Views;
@model TdService.UI.Web.ViewModels.Account.MainViewModel
@{
    ViewBag.Title = "Shop Any Ware";
}

<!-- Main hero unit for a primary marketing message or call to action -->
<div class="row-fluid">
    <div class="span7">
        <div class="hero-unit">
            <h1>@HomeViewResources.PageHeroHeader</h1>
            <br />
            <p>@HomeViewResources.PageHeroDescription</p>
            @*<br/>
            <p><a href="@Url.Action("SignUp", "Account")" class="btn btn-primary btn-large">Sign up free and start shopping &raquo;</a></p>*@
        </div>
    </div>
    <div class="span5 form_registration">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#signUpForm" data-toggle="tab">@AccountViewResources.SignUpFormHeader</a></li>
            <li><a href="#signInForm" data-toggle="tab">@AccountViewResources.SignInFormHeader</a></li>
        </ul>
        <div class="tab-content">
            <div id="signUpForm" class="tab-pane active">
                @using (Html.BeginForm("SignUp", "Account", FormMethod.Post, new Dictionary<string, object> { { "class", "form-horizontal" } }))
                {
                    @Html.AntiForgeryToken()
                    <div class="control-group">
                        <label class="control-label">@AccountViewResources.EmailFormLabel:</label>
                        <div class="controls">
                            @Html.TextBoxFor(m => m.SignUpViewModel.Email, new Dictionary<string, object> { { "class", "span3" }, { "data-bind", "value: email" }, { "placeholder", AccountViewResources.EmailFormFieldPlaceholder } })
                            @Html.ValidationMessageFor(m => m.SignUpViewModel.Email)
                            @*<input type="email" class="span3" data-bind="value: email" required placeholder="@AccountViewResources.EmailFormFieldPlaceholder" />*@
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">@AccountViewResources.PasswordFormLabel:</label>
                        <div class="controls">
                            @Html.PasswordFor(m => m.SignUpViewModel.Password, new Dictionary<string, object> { { "class", "span3" }, { "data-bind", "value: password" }, { "placeholder", AccountViewResources.PasswordFormFieldPlaceholder } })
                            @Html.ValidationMessageFor(m => m.SignUpViewModel.Password)
                            @*<input type="password" class="span3" data-bind="value: password" required placeholder="@AccountViewResources.PasswordFormFieldPlaceholder" />*@
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">@AccountViewResources.ConfirmPasswordFormLabel:</label>
                        <div class="controls">
                            @Html.PasswordFor(m => m.SignUpViewModel.PasswordConfirm, new Dictionary<string, object> { { "class", "span3" }, { "data-bind", "value: passwordConfirm" }, { "placeholder", AccountViewResources.PasswordConfirmFormFieldPlaceholder } })
                            @Html.ValidationMessageFor(m => m.SignUpViewModel.PasswordConfirm)
                            @*<input type="password" class="span3" data-bind="value: passwordConfirm" required placeholder="@AccountViewResources.PasswordConfirmFormFieldPlaceholder" />*@
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">@AccountViewResources.FirstNameFormLabel:</label>
                        <div class="controls">
                            @Html.TextBoxFor(m => m.SignUpViewModel.FirstName, new Dictionary<string, object> { { "class", "span3" }, { "data-bind", "value: firstName" }, { "placeholder", AccountViewResources.FirstNameFormFieldPlaceholder } })
                            @Html.ValidationMessageFor(m => m.SignUpViewModel.FirstName)
                            @*<input type="text" class="span3" data-bind="value: firstName" required placeholder="@AccountViewResources.FirstNameFormFieldPlaceholder" />*@
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">@AccountViewResources.LastNameFormLabel:</label>
                        <div class="controls">
                            @Html.TextBoxFor(m => m.SignUpViewModel.LastName, new Dictionary<string, object> { { "class", "span3" }, { "data-bind", "value: lastName" }, { "placeholder", AccountViewResources.LastNameFormFieldPlaceholder } })
                            @Html.ValidationMessageFor(m => m.SignUpViewModel.LastName)
                            @*<input type="text" class="span3" data-bind="value: lastName" required placeholder="@AccountViewResources.LastNameFormFieldPlaceholder" />*@
                        </div>
                    </div>
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary btn-large">@AccountViewResources.SignUpButton</button>
                    </div>
                }
            </div>
            <div id="signInForm" class="tab-pane">
                @using (Html.BeginForm("SignIn", "Account", FormMethod.Post, new Dictionary<string, object> { { "class", "form-horizontal" } }))
                {
                    @Html.AntiForgeryToken()
                    <fieldset>
                        @*<div class="control-group">
                            <h2>@AccountViewResources.SignInPageHeader</h2>
                        </div>*@
                        <div class="control-group">
                            <label class="control-label">@AccountViewResources.EmailFormLabel:</label>
                            <div class="controls">
                                @Html.TextBoxFor(m => m.SignInViewModel.Email, new Dictionary<string, object> { { "class", "span3" }, { "data-bind", "value: Email" }, { "placeholder", AccountViewResources.EmailFormFieldPlaceholder } })
                                @Html.ValidationMessageFor(m => m.SignInViewModel.Email)
                                @*<input type="email" class="span3" data-bind="value: email" required placeholder="@AccountViewResources.EmailFormFieldPlaceholder" />*@
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label">@AccountViewResources.PasswordFormLabel:</label>
                            <div class="controls">
                                @Html.PasswordFor(m => m.SignInViewModel.Password, new Dictionary<string, object> { { "class", "span3" }, { "data-bind", "value: Password" }, { "placeholder", AccountViewResources.PasswordFormFieldPlaceholder } })
                                @Html.ValidationMessageFor(m => m.SignInViewModel.Password)
                                @*<input type="password" class="span3" data-bind="value: password" required placeholder="@AccountViewResources.PasswordFormFieldPlaceholder" />*@
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="controls">
                                <div style="float: left">@Html.CheckBoxFor(m => m.SignInViewModel.RememberMe, new Dictionary<string, object> { { "data-bind", "value: RememberMe" } })@*<input id="rememberMe" type="checkbox" data-bind="value: rememberMe" />*@</div>
                                <div style="float: left; margin: 3px">@Html.LabelFor(m => m.SignInViewModel.RememberMe, @AccountViewResources.RememberMeFormLabel)</div>
                                <div style="clear: left"><a href="@Url.Action("Forgot", "Account")">@AccountViewResources.ForgotPasswordHeader</a></div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary btn-large">@AccountViewResources.SignInButton</button>
                        </div>
                    </fieldset>
                }
            </div>
        </div>
    </div>
</div>

<!-- Example row of columns -->
<div class="row-fluid">
    <div class="span4">
        <h3>@HomeViewResources.ServiceDescriptionHeader1</h3>
        <p>@HomeViewResources.ServiceDescriptionValue1</p>
        @*<p><a class="btn" href="#">More &raquo;</a></p>*@
    </div>
    <div class="span4">
        <h3>@HomeViewResources.ServiceDescriptionHeader2</h3>
        <p>@HomeViewResources.ServiceDescriptionValue2_1</p>
        <p>@HomeViewResources.ServiceDescriptionValue2_2</p>
        @*<p><a class="btn" href="#">More &raquo;</a></p>*@
    </div>
    <div class="span4">
        <h3>@HomeViewResources.ServiceDescriptionHeader3</h3>
        <p>@HomeViewResources.ServiceDescriptionValue3</p>
        <ul>
            <li>@HomeViewResources.ServiceDescriptionValue3_1</li>
            <li>@HomeViewResources.ServiceDescriptionValue3_2</li>
            <li>@HomeViewResources.ServiceDescriptionValue3_3</li>
            <li>@HomeViewResources.ServiceDescriptionValue3_4</li>
        </ul>
        @*<p><a class="btn" href="#">More &raquo;</a></p>*@
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/Home")
    <script type="text/javascript">
        $(document).ready(function () {
            var signInViewModel = new SignInViewModel();
            ko.applyBindings(signInViewModel, document.getElementById('signInForm'));
            ko.validation.init(signInViewModel, { insertMessages: false, decorateElement: true, errorClass: 'error', parseInputAttributes: true });
        });
    </script>
}
